<Window x:Class="WpfApp1.Firmware"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d"
        Title="Firmware"  
        MaxWidth="900" MinWidth="900" 
        Background="#525151" Width="900"
        Height="Auto" 
        WindowStartupLocation="CenterScreen"
        ResizeMode="CanResize"
        >
    <Window.Resources>
        <LinearGradientBrush x:Key="ForegroundFontExpanderToggleButton" EndPoint="0.5,1" StartPoint="0.5,0" >
            <GradientStop Color="#CCE2F8FF" Offset="0" />
            <!--<GradientStop Color="#FF196116" Offset="0.5" />-->
            <GradientStop Color="#CC21596E" Offset="1" />
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="ControlBackgroundOver" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF605F5F" Offset="0"/>
            <GradientStop Color="#FF030303" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="FocusVisualBrush" Color="#B6BBBBBB" />
        <Style x:Key="FocusLine">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle SnapsToDevicePixels="True" Stroke="#ddd" StrokeDashArray="1 2" StrokeThickness="1" Margin="2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButton">
            <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Border"
                                Duration="0:0:0.4" To="{StaticResource BorderBrushGradientColor1}"/>
                                <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border"
                                Duration="0:0:0.4" To="{StaticResource BorderBrushGradientColor2}"/>
                                <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="ArrowDown"
                                Duration="0:0:0.4" To="{StaticResource BorderBrushGradientColor2}"/>
                                <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="ArrowDown"
                                Duration="0:0:0.4" To="{StaticResource BorderBrushGradientColor2}"/>
                                <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="ArrowUp"
                                Duration="0:0:0.4" To="{StaticResource BorderBrushGradientColor2}"/>
                                <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="ArrowUp"
                                Duration="0:0:0.4" To="{StaticResource BorderBrushGradientColor2}"/>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="Border"
                                            Duration="0:0:0.4" To="{StaticResource BorderBrushSolidColor}"/>
                                <ColorAnimation Storyboard.TargetProperty="(Border.BorderBrush).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="Border"
                                            Duration="0:0:0.4" To="{StaticResource BorderBrushSolidColor}"/>
                                <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="ArrowDown"
                                Duration="0:0:0.4" To="{StaticResource ArrowBrushComboBox}"/>
                                <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="ArrowDown"
                                Duration="0:0:0.4" To="{StaticResource ArrowBrushComboBox}"/>
                                <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="ArrowUp"
                                Duration="0:0:0.4" To="{StaticResource ArrowBrushComboBox}"/>
                                <ColorAnimation Storyboard.TargetProperty="(Path.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="ArrowUp"
                                Duration="0:0:0.4" To="{StaticResource ArrowBrushComboBox}"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border Grid.ColumnSpan="2" CornerRadius="6"
                            BorderThickness="{Binding BorderThickness, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}}" 
                            BorderBrush="{Binding BorderBrush, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="24" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="{StaticResource ControlBackgroundNormal}" 
                                    BorderBrush="{StaticResource ControlBorderBrush}" BorderThickness="1" />
                                <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="3,0,0,3" 
                                    Background="{Binding Background, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBox}}}"
                                    BorderBrush="{StaticResource ControlBorderBrush}" Margin="1" BorderThickness="0,0,1,0" />
                                <Grid Grid.Column="1">
                                    <Path x:Name="ArrowDown" HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Data="M -2 0 L 2 4 L 6 0 Z" Margin="0,8,0,0">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                <GradientStop Color="{StaticResource ArrowBrushComboBox}" Offset="0.204" />
                                                <GradientStop Color="{StaticResource ArrowBrushComboBox}" Offset="0.864" />
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                    <Path x:Name="ArrowUp" HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Data="M -2 4 L 2 0 L 6 4 Z" Margin="0,0,0,8">
                                        <Path.Fill>
                                            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                <GradientStop Color="{StaticResource ArrowBrushComboBox}" Offset="0.204" />
                                                <GradientStop Color="{StaticResource ArrowBrushComboBox}" Offset="0.864" />
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Grid>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBrush}" />
                                <Setter TargetName="BorderToggle" Property="Background" Value="{StaticResource DisabledBrush}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource DisabledForeground}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ArrowDown" Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource DisabledForeground}"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="ArrowUp" Property="Fill">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource DisabledForeground}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="ToggleButton">
            <Setter Property="TextOptions.TextHintingMode" Value="Animated" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Background" Value="{StaticResource ControlBackgroundNormal}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusLine}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="FontWeight" Value="DemiBold" />
            <Setter Property="BorderBrush" Value="{StaticResource ControlBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="Root">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="0:0:0.4" />
                                        <VisualTransition To="Pressed" />
                                        <VisualTransition From="Pressed"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="MouseOverElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="NormalElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0" />
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                            <!--<DoubleAnimation Duration="0" Storyboard.TargetName="HighlightElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.5" />-->
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="ContentHost" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="0.75" />
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedElement" />
                                            <ColorAnimation Storyboard.TargetProperty="(TextBlock.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="ContentHost" To="{StaticResource DisabledForeground}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="NormalElement" />
                                            <!--<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HighlightElement" />-->
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="CheckedElement" />
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="MouseOverElement">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="(FrameworkElement.Opacity)" To="1" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="DisabledElement" Background="{StaticResource DisabledBrush}" CornerRadius="2" Opacity="0">
                                <Border BorderBrush="{StaticResource DisabledBorderBrush}" BorderThickness="0,0,1,1" CornerRadius="2" />
                            </Border>
                            <Border x:Name="NormalElement" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2"
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                            <Border x:Name="CheckedElement" CornerRadius="2.5" BorderBrush="#D0494a4d" BorderThickness="1" Margin="0,-1,0,-1" Opacity="0"
                                Background="{StaticResource ForegroundFontExpanderToggleButton}">
                                <Border BorderBrush="#70303030" BorderThickness="1,1,0,0" CornerRadius="2">
                                    <Border BorderBrush="#30303030" BorderThickness="1" CornerRadius="1.5">
                                        <Border BorderBrush="#10303030" BorderThickness="1,1,0,0" CornerRadius="1" />
                                    </Border>
                                </Border>
                            </Border>
                            <Border x:Name="MouseOverElement" BorderBrush="{StaticResource ControlActiveBorderBrush}" Background="{StaticResource ControlBackgroundOver}" CornerRadius="2" Opacity="0" 
                                BorderThickness="{TemplateBinding BorderThickness}"/>
                            <!--<Border x:Name="HighlightElement" BorderBrush="{StaticResource ControlHighlight}" BorderThickness="{StaticResource BorderThicknessButtonOutline}" CornerRadius="2" />-->
                            <ContentPresenter x:Name="ContentHost" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter.Effect>
                                    <!-- Тень от надписи -->
                                    <DropShadowEffect Color="Black" Direction="-90" BlurRadius="0" ShadowDepth="1" Opacity="0.5" />
                                </ContentPresenter.Effect>
                            </ContentPresenter>
                            <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="False" Margin="0" Opacity="0" RadiusX="1" RadiusY="1" Stroke="{StaticResource FocusVisualBrush}" StrokeThickness="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <LinearGradientBrush x:Key="SelectedBackgroundBrushToolBar" EndPoint="0.5,1" StartPoint="0.5,0">
            <GradientStop Color="#FFBBBBBB" />
            <GradientStop Color="#FF737373" Offset="0.38" />
            <GradientStop Color="#FF646464" Offset="0.384" />
            <GradientStop Color="#FFA1A1A1" Offset="1" />
        </LinearGradientBrush>

        <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <DoubleAnimation Storyboard.TargetName="hover" Storyboard.TargetProperty="(FrameworkElement.Opacity)" Duration="0:0:0.3" To=".8"/>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <DoubleAnimation Storyboard.TargetName="hover" Storyboard.TargetProperty="(FrameworkElement.Opacity)" Duration="0:0:0.3" To="0"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid x:Name="Bd" Background="{StaticResource SelectedBackgroundBrushToolBar}">
                            <Border x:Name="hover" Background="{StaticResource ControlActiveBorderBrush}" Opacity="0"/>
                            <Canvas SnapsToDevicePixels="True" HorizontalAlignment="Right" Margin="7,2,2,2" VerticalAlignment="Bottom" Width="6" Height="7">
                                <Path Stroke="White" Data="M 1 1.5 L 6 1.5"/>
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 0 0.5 L 5 0.5"/>
                                <Path Fill="White" Data="M 0.5 4 L 6.5 4 L 3.5 7 Z"/>
                                <Path Fill="{TemplateBinding Foreground}" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ControlActiveBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource DisabledForeground}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="HoverOn">
                                <DoubleAnimation Storyboard.TargetName="hover" Storyboard.TargetProperty="(FrameworkElement.Opacity)" Duration="0:0:0.3" To=".8"/>
                            </Storyboard>
                            <Storyboard x:Key="HoverOff">
                                <DoubleAnimation Storyboard.TargetName="hover" Storyboard.TargetProperty="(FrameworkElement.Opacity)" Duration="0:0:0.3" To="0"/>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Grid SnapsToDevicePixels="True" x:Name="Bd" Background="{StaticResource SelectedBackgroundBrushToolBar}">
                            <Border x:Name="hover" Background="{StaticResource ControlActiveBorderBrush}" Opacity="0"/>
                            <Canvas SnapsToDevicePixels="True" HorizontalAlignment="Right" Margin="2,7,2,2" VerticalAlignment="Bottom" Width="7" Height="6">
                                <Path Stroke="White" Data="M 1.5 1 L 1.5 6"/>
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 0.5 0 L 0.5 5"/>
                                <Path Fill="White" Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z"/>
                                <Path Fill="{TemplateBinding Foreground}" Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z"/>
                            </Canvas>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource HoverOff}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ControlActiveBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{StaticResource DisabledForeground}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="TabButton">
            <Setter Property="Background" Value="White" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="0" Background="White" BorderBrush="#ccc" BorderThickness="2" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="TabButtonFirst">
            <Setter Property="Background" Value="White" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="3" Background="#1C1C1C" BorderBrush="#ccc" BorderThickness="2" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button" x:Key="TabButtonLast">
            <Setter Property="Background" Value="#303030" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="3" Background="#303030" BorderBrush="#ccc" BorderThickness="1" >
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="Button_border">
            <Setter Property="Button.BorderThickness" Value="2"></Setter>
            <Setter Property="Button.BorderBrush" Value="White"></Setter>
        </Style>
    </Window.Resources>
    <Grid Height="719">
        <Grid.RowDefinitions>
            <RowDefinition Height="26"></RowDefinition>
            <RowDefinition Height="59"></RowDefinition>
            <RowDefinition Height="335"></RowDefinition>
            <RowDefinition x:Name="preLast" Height="265"></RowDefinition>
            <RowDefinition x:Name="lastCh" Height="45"></RowDefinition>
            <RowDefinition Height="50"/>

        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="60"></ColumnDefinition>
            <ColumnDefinition Width="630"></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <Canvas>
            <Line x:Name="line4"
     X1="40" Y1="0"
     X2="40" Y2="669"
     Stroke="Black"
     StrokeThickness="1" Height="939" Canvas.Top="1" Width="73" Canvas.Left="-13" >
                <Line.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>

                        <TranslateTransform/>
                    </TransformGroup>
                </Line.RenderTransform>
            </Line>
            <Line
                X1="60" Y1="0"
                X2="60" Y2="35"
                Stroke="Black">
            </Line>
            <Line x:Name="line2"
                 X1="15" Y1="670"
                 X2="1400" Y2="670"
                 Stroke=" Black"
                    StrokeThickness="1">
            </Line>

            <Line x:Name="line3"
                 X1="15" Y1="690"
                 X2="1400" Y2="690"
                 Stroke=" Black"
                    StrokeThickness="1">
            </Line>
            <Line
                 X1="60" Y1="35"
                 X2="1440" Y2="35"
                 Stroke=" Black"
                    StrokeThickness="1">
            </Line>
            <Line x:Name="line1"
                 X1="15" Y1="670"
                 X2="15" Y2="690"
                 Stroke=" Black"
                    StrokeThickness="1">
            </Line>
            <Line
                 X1="1400" Y1="940"
                 X2="1400" Y2="960"
                 Stroke=" Black"
                    StrokeThickness="1">
            </Line>
            <Line
                 X1="60" Y1="65"
                 X2="1440" Y2="65"
                 Stroke=" Black"
                    StrokeThickness="1">
            </Line>
            <Line
                 X1="1440" Y1="35"
                 X2="1440" Y2="95"
                 Stroke=" Black"
                    StrokeThickness="1">
            </Line>
        </Canvas>

        <StackPanel Grid.Column="1" Orientation="Horizontal" VerticalAlignment="Center" Margin="8,0,0,0" Height="24" >
            <Button x:Name="manage_Button"  Style="{StaticResource TabButtonLast}"  Width="130" Height="24" Background="#303030" Foreground="#93C4C9"  Content="Управление" Margin="0,0,8,0" FontSize="16"></Button>
            <Button x:Name="status_Button" Style="{StaticResource TabButtonLast}" Width="130" Height="24" Background="#303030" Foreground="#93C4C9" Content="Статус" FontSize="16"  Margin="0,0,8,0"></Button>
            <Button x:Name="firmware_Button" Style="{StaticResource TabButtonLast}" Width="130" Height="24" Background="#303030" Foreground="#93C4C9" Content="Прошивка" FontSize="16"></Button>
        </StackPanel>
        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" Margin="8,0,0,15">
            <Image Source="/Images/Firmware/warn.png" MaxHeight="14"></Image>
            <Label Content="WN" FontFamily="Segoe UI" FontSize="10px" Foreground="#FFFFFF" VerticalAlignment="Center" Margin="4,0,0,0"></Label>
            <ComboBox Text="0" Foreground="White" FontSize="14" Background="#303030"  Height="20" Width="90" Margin="6,0,0,0"></ComboBox>
            <Image Source="/Images/Firmware/geo.png" MaxHeight="14" Margin="10,0,0,0"></Image>
            <Label Content="WS" FontFamily="Segoe UI" FontSize="10px" Foreground="#FFFFFF" VerticalAlignment="Center" Margin="5,0,0,0"></Label>
            <ComboBox Text="0" Foreground="White" FontSize="14" Background="#303030"  Height="20" Width="90" Margin="6,0,0,0"></ComboBox>
            <Image Source="/Images/Firmware/arrowrect.png" Margin="8,0,0,0" MaxHeight="14"></Image>

        </StackPanel>
        <StackPanel Grid.Row="2" Grid.Column="1">
            <DataGrid Name="dg"   Style="{StaticResource datag1}"
                MinColumnWidth="110"
                 RowHeight="30"
                 RowBackground="#8F8E8E"
                 HorizontalAlignment="Left"
                 AutoGenerateColumns="False" 
                 AlternatingRowBackground="#525151"
                 GridLinesVisibility="All"
                 ColumnHeaderHeight="30"
                 BorderBrush="White"
                 HorizontalContentAlignment="Center"
                 >
                <DataGrid.Columns>
                    <DataGridTextColumn Header="     №" Binding="{Binding ID}" MaxWidth="50"></DataGridTextColumn>
                    <DataGridTextColumn Header="           F, кГц" MinWidth="110" Binding="{Binding F}"></DataGridTextColumn>
                    <DataGridTextColumn Header="          Δf, кГц" MinWidth="110" Binding="{Binding deltaF}"></DataGridTextColumn>
                    <DataGridTextColumn Header="{DynamicResource interference_params}" MinWidth="110" Binding="{Binding paramT}"></DataGridTextColumn>
                    <DataGridTextColumn Header="{DynamicResource power}" MinWidth="110" Binding="{Binding Power}"></DataGridTextColumn>
                    <DataGridTextColumn Header="{DynamicResource letter}" MinWidth="110" Binding="{Binding lit}"></DataGridTextColumn>
                </DataGrid.Columns>

            </DataGrid>
        </StackPanel>
        <StackPanel Grid.Row="2" Grid.Column="2" Margin="0,0,-67,0">

            <GroupBox BorderThickness="0.5" Header="{DynamicResource navigation}" Foreground="#93C4C9" Margin="0,-10,80,0" Height="286" Width="177" HorizontalAlignment="Left">

                <StackPanel Orientation="Vertical">
                    <Polygon  Margin="0,0,0,-7" Stroke="#acc4ce" StrokeThickness="1" VerticalAlignment="Top" HorizontalAlignment="Right" Points="16, 0, 8, 12, 0, 0">

                        <Polygon.Effect>
                            <DropShadowEffect Color="Black" ShadowDepth ="4"/>
                        </Polygon.Effect>
                    </Polygon >

                    <ToggleButton Width="148" Style="{StaticResource ToggleButton}"    Foreground="#FFFDF7" Height="25" Content="GPS L1" Margin="0,9,0,7">

                    </ToggleButton>
                    <ToggleButton Width="148" Style="{StaticResource ToggleButton}" Foreground="#FFFDF7" Height="25" Content="GPS L2" Margin="0,0,0,19.5">

                    </ToggleButton>
                    <ToggleButton Width="148" Style="{StaticResource ToggleButton}" Foreground="#FFFDF7" Height="25" Margin="0,9,0,7"  Content="GLONASS L1">

                    </ToggleButton>
                    <ToggleButton Width="148" Style="{StaticResource ToggleButton}"  Foreground="#FFFDF7" Height="25" Margin="0,0,0,19.5" Content="GLONASS L2">

                    </ToggleButton>
                    <ToggleButton Width="148" Style="{StaticResource ToggleButton}" Foreground="#FFFDF7" Height="25" Margin="0,9,0,7" Content="GNSS L1">

                    </ToggleButton>
                    <ToggleButton Width="148" Style="{StaticResource ToggleButton}" Foreground="#FFFDF7" Height="25"  Content="GNSS L2">

                    </ToggleButton>
                    <Label  Foreground="White" Content="W: %"></Label>
                </StackPanel>
            </GroupBox>
        </StackPanel>
        <StackPanel Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" Width="0">
            <Canvas>
                <Rectangle x:Name="rect_tohide" Height="236" Width="630" Fill="#525151" RadiusX="7" RadiusY="7" Stroke="White"   />
                <Line
                 X1="0" Y1="30"
                 X2="630" Y2="30"
                 Stroke=" White"
                    StrokeThickness="1" 
                >
                </Line>
                <StackPanel Orientation="Horizontal"  VerticalAlignment="Center">
                    <Label Content="LOG" Margin="15,0,0,0" Foreground="#FFFFFF" FontFamily="Segoe UI"></Label>
                    <Button x:Name="arrow_btn" Margin="545,4,0,0" Background="#525151" BorderBrush="#525151" Click="Button_Click">
                        <Image x:Name="arrow_Swap" Source="/Images/arrowUp.png"></Image>
                    </Button>
                </StackPanel>
            </Canvas>
        </StackPanel>
        <StackPanel x:Name="rect_try" Orientation="Horizontal"  VerticalAlignment="Top" Grid.Row="3" Margin="50,247,0,0" Grid.ColumnSpan="2" Height="26" Grid.RowSpan="2">
            <Label Foreground="White" Content="SHS" FontSize="12" Margin="0,0,0,0"/>
            <Image Source="/Images/rect.png" MaxHeight="15" Margin="0,0,0,0"/>
            <Image Source="/Images/Ellipse 4.png" MaxHeight="15" Margin="12,0,0,0"/>
            <Image Source="/Images/Ellipse 4.png" MaxHeight="15" Margin="3,0,0,0"/>
            <ComboBox  Foreground="White" FontSize="14" Background="#303030"  Height="20" Width="90" Margin="6,0,0,0"></ComboBox>
            <ComboBox  Foreground="White" FontSize="14" Background="#303030"  Height="20" Width="90" Margin="6,0,0,0"></ComboBox>
        </StackPanel>
    </Grid>

</Window>
